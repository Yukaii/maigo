
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineSystem.cmake:205 (message)"
      - "CMakeLists.txt:12 (project)"
    message: |
      The system is: Darwin - 24.5.0 - arm64
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
      Compiler: /usr/bin/cc 
      Build flags: 
      Id flags:  
      
      The output was:
      0
      
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "a.out"
      
      The C compiler identification is AppleClang, found in:
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/4.0.3/CompilerIdC/a.out
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:290 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Detecting C compiler apple sysroot: "/usr/bin/cc" "-E" "apple-sdk.c"
        # 1 "apple-sdk.c"
        # 1 "<built-in>" 1
        # 1 "<built-in>" 3
        # 465 "<built-in>" 3
        # 1 "<command line>" 1
        # 1 "<built-in>" 2
        # 1 "apple-sdk.c" 2
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 1 3 4
        # 89 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 90 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/TargetConditionals.h" 1 3 4
        # 91 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 207 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 1 3 4
        # 196 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 197 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 1 3 4
        # 33 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 34 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 2 3 4
        # 198 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 1 3 4
        # 34 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 1 3 4
        # 35 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 2 3 4
        # 199 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 208 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 2 "apple-sdk.c" 2
        
        
      Found apple sysroot: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
      Compiler: /usr/bin/c++ 
      Build flags: 
      Id flags:  
      
      The output was:
      0
      
      
      Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "a.out"
      
      The CXX compiler identification is AppleClang, found in:
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/4.0.3/CompilerIdCXX/a.out
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerId.cmake:290 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCXXCompiler.cmake:126 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Detecting CXX compiler apple sysroot: "/usr/bin/c++" "-E" "apple-sdk.cpp"
        # 1 "apple-sdk.cpp"
        # 1 "<built-in>" 1
        # 1 "<built-in>" 3
        # 513 "<built-in>" 3
        # 1 "<command line>" 1
        # 1 "<built-in>" 2
        # 1 "apple-sdk.cpp" 2
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 1 3 4
        # 89 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 90 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/TargetConditionals.h" 1 3 4
        # 91 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 207 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 1 3 4
        # 196 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 197 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 1 3 4
        # 33 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityVersions.h" 1 3 4
        # 34 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 2 3 4
        # 198 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 1 3 4
        # 34 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 3 4
        # 1 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternal.h" 1 3 4
        # 35 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityInternalLegacy.h" 2 3 4
        # 199 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/Availability.h" 2 3 4
        # 208 "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/AvailabilityMacros.h" 2 3 4
        # 2 "apple-sdk.cpp" 2
        
        
      Found apple sysroot: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:83 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    checks:
      - "Detecting C compiler ABI info"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "CMAKE_C_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_48f8a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_48f8a.dir/build.make CMakeFiles/cmTC_48f8a.dir/build
        Building C object CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o
        /usr/bin/cc   -arch arm64 -fPIE   -v -Wl,-v -MD -MT CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -c /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c
        Apple clang version 17.0.0 (clang-1700.0.13.5)
        Target: arm64-apple-darwin24.5.0
        Thread model: posix
        InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
        clang: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
         "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.5 -fvisibility-inlines-hidden-static-local-var -fdefine-target-os-macros -fno-assume-unique-vtables -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +zcm -target-feature +zcz -target-feature +v8.5a -target-feature +aes -target-feature +altnzcv -target-feature +ccdp -target-feature +complxnum -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +fptoint -target-feature +fullfp16 -target-feature +jsconv -target-feature +lse -target-feature +neon -target-feature +pauth -target-feature +perfmon -target-feature +predres -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sb -target-feature +sha2 -target-feature +sha3 -target-feature +specrestrict -target-feature +ssbs -target-abi darwinpcs -debugger-tuning=lldb -fdebug-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd -target-linker-version 1167.5 -v -fcoverage-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17 -dependency-file CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -x c /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c
        clang -cc1 version 17.0.0 (clang-1700.0.13.5) default target arm64-apple-darwin24.5.0
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include"
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/SubFrameworks"
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks"
        #include "..." search starts here:
        #include <...> search starts here:
         /usr/local/include
         /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include
         /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include
         /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
         /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory)
        End of search list.
        Linking C executable cmTC_48f8a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_48f8a.dir/link.txt --verbose=1
        Apple clang version 17.0.0 (clang-1700.0.13.5)
        Target: arm64-apple-darwin24.5.0
        Thread model: posix
        InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
         "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch arm64 -platform_version macos 15.0.0 15.5 -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mllvm -enable-linkonceodr-outlining -o cmTC_48f8a -L/usr/local/lib -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a
        @(#)PROGRAM:ld PROJECT:ld-1167.5
        BUILD 01:45:05 Apr 30 2025
        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
        will use ld-classic for: armv6 armv7 armv7s i386 armv6m armv7k armv7m armv7em
        LTO support using: LLVM version 17.0.0 (static support for 29, runtime is 29)
        TAPI support using: Apple TAPI version 17.0.0 (tapi-1700.0.3.5)
        Library search paths:
        	/usr/local/lib
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift
        Framework search paths:
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -v -Wl,-v CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -o cmTC_48f8a
        
      exitCode: 0
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:122 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Effective list of requested architectures (possibly empty)  : ""
      Effective list of architectures found in the ABI info binary: "arm64"
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:191 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Parsed C implicit include dir info: rv=done
        found start of include info
        found start of implicit include info
          add: [/usr/local/include]
          add: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
          add: [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
          add: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        end of search list found
        collapse include dir [/usr/local/include] ==> [/usr/local/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include] ==> [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include] ==> [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        implicit include dirs: [/usr/local/include;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
      
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:227 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Parsed C implicit link information:
        link line regex: [^( *|.*[/\\])(ld[0-9]*(|\\.[a-rt-z][a-z]*|\\.s[a-np-z][a-z]*|\\.so[a-z]+)|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(|\\.[a-rt-z][a-z]*|\\.s[a-np-z][a-z]*|\\.so[a-z]+)))("|,| |$)]
        ignore line: [Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd']
        ignore line: []
        ignore line: [Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_48f8a/fast]
        ignore line: [/Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_48f8a.dir/build.make CMakeFiles/cmTC_48f8a.dir/build]
        ignore line: [Building C object CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o]
        ignore line: [/usr/bin/cc   -arch arm64 -fPIE   -v -Wl -v -MD -MT CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -MF CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o.d -o CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -c /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c]
        ignore line: [Apple clang version 17.0.0 (clang-1700.0.13.5)]
        ignore line: [Target: arm64-apple-darwin24.5.0]
        ignore line: [Thread model: posix]
        ignore line: [InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin]
        ignore line: [clang: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
        ignore line: [ "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCCompilerABI.c -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.5 -fvisibility-inlines-hidden-static-local-var -fdefine-target-os-macros -fno-assume-unique-vtables -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +zcm -target-feature +zcz -target-feature +v8.5a -target-feature +aes -target-feature +altnzcv -target-feature +ccdp -target-feature +complxnum -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +fptoint -target-feature +fullfp16 -target-feature +jsconv -target-feature +lse -target-feature +neon -target-feature +pauth -target-feature +perfmon -target-feature +predres -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sb -target-feature +sha2 -target-feature +sha3 -target-feature +specrestrict -target-feature +ssbs -target-abi darwinpcs -debugger-tuning=lldb -fdebug-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd -target-linker-version 1167.5 -v -fcoverage-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rMjSQd -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17 -dependency-file CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -sys-header-deps -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fskip-odr-check-in-gmf -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -x c /opt/homebrew/share/cmake/Modules/CMakeCCompilerABI.c]
        ignore line: [clang -cc1 version 17.0.0 (clang-1700.0.13.5) default target arm64-apple-darwin24.5.0]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include"]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/SubFrameworks"]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks"]
        ignore line: [#include "..." search starts here:]
        ignore line: [#include <...> search starts here:]
        ignore line: [ /usr/local/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory)]
        ignore line: [End of search list.]
        ignore line: [Linking C executable cmTC_48f8a]
        ignore line: [/opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_48f8a.dir/link.txt --verbose=1]
        ignore line: [Apple clang version 17.0.0 (clang-1700.0.13.5)]
        ignore line: [Target: arm64-apple-darwin24.5.0]
        ignore line: [Thread model: posix]
        ignore line: [InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin]
        link line: [ "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch arm64 -platform_version macos 15.0.0 15.5 -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mllvm -enable-linkonceodr-outlining -o cmTC_48f8a -L/usr/local/lib -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld] ==> ignore
          arg [-demangle] ==> ignore
          arg [-lto_library] ==> ignore, skip following value
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib] ==> skip value of -lto_library
          arg [-dynamic] ==> ignore
          arg [-arch] ==> ignore
          arg [arm64] ==> ignore
          arg [-platform_version] ==> ignore
          arg [macos] ==> ignore
          arg [15.0.0] ==> ignore
          arg [15.5] ==> ignore
          arg [-syslibroot] ==> ignore
          arg [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk] ==> ignore
          arg [-mllvm] ==> ignore
          arg [-enable-linkonceodr-outlining] ==> ignore
          arg [-o] ==> ignore
          arg [cmTC_48f8a] ==> ignore
          arg [-L/usr/local/lib] ==> dir [/usr/local/lib]
          arg [-search_paths_first] ==> ignore
          arg [-headerpad_max_install_names] ==> ignore
          arg [-v] ==> ignore
          arg [CMakeFiles/cmTC_48f8a.dir/CMakeCCompilerABI.c.o] ==> ignore
          arg [-lSystem] ==> lib [System]
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a] ==> lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
        linker tool for 'C': /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
        Library search paths: [;/usr/local/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        Framework search paths: [;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
        remove lib [System]
        remove lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
        collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
        collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
        collapse library dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib]
        collapse library dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        collapse framework dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
        implicit libs: []
        implicit objs: []
        implicit dirs: [/usr/local/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        implicit fwks: [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
      
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake:36 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:270 (cmake_determine_linker_id)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Running the C compiler's linker: "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" "-v"
      @(#)PROGRAM:ld PROJECT:ld-1167.5
      BUILD 01:45:05 Apr 30 2025
      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
      will use ld-classic for: armv6 armv7 armv7s i386 armv6m armv7k armv7m armv7em
      LTO support using: LLVM version 17.0.0 (static support for 29, runtime is 29)
      TAPI support using: Apple TAPI version 17.0.0 (tapi-1700.0.3.5)
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:83 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    checks:
      - "Detecting CXX compiler ABI info"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF"
    cmakeVariables:
      CMAKE_CXX_FLAGS: ""
      CMAKE_CXX_FLAGS_DEBUG: "-g"
      CMAKE_CXX_SCAN_FOR_MODULES: "OFF"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "CMAKE_CXX_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_88bae/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_88bae.dir/build.make CMakeFiles/cmTC_88bae.dir/build
        Building CXX object CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o
        /usr/bin/c++   -arch arm64 -fPIE   -v -Wl,-v -MD -MT CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -c /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp
        Apple clang version 17.0.0 (clang-1700.0.13.5)
        Target: arm64-apple-darwin24.5.0
        Thread model: posix
        InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
        clang++: warning: -Wl,-v: 'linker' input unused [-Wunused-command-line-argument]
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1"
         "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.5 -fvisibility-inlines-hidden-static-local-var -fdefine-target-os-macros -fno-assume-unique-vtables -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +zcm -target-feature +zcz -target-feature +v8.5a -target-feature +aes -target-feature +altnzcv -target-feature +ccdp -target-feature +complxnum -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +fptoint -target-feature +fullfp16 -target-feature +jsconv -target-feature +lse -target-feature +neon -target-feature +pauth -target-feature +perfmon -target-feature +predres -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sb -target-feature +sha2 -target-feature +sha3 -target-feature +specrestrict -target-feature +ssbs -target-abi darwinpcs -debugger-tuning=lldb -fdebug-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF -target-linker-version 1167.5 -v -fcoverage-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17 -dependency-file CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -x c++ /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp
        clang -cc1 version 17.0.0 (clang-1700.0.13.5) default target arm64-apple-darwin24.5.0
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include"
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/SubFrameworks"
        ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks"
        #include "..." search starts here:
        #include <...> search starts here:
         /usr/local/include
         /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1
         /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include
         /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include
         /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include
         /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory)
        End of search list.
        Linking CXX executable cmTC_88bae
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_88bae.dir/link.txt --verbose=1
        Apple clang version 17.0.0 (clang-1700.0.13.5)
        Target: arm64-apple-darwin24.5.0
        Thread model: posix
        InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
         "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch arm64 -platform_version macos 15.0.0 15.5 -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mllvm -enable-linkonceodr-outlining -o cmTC_88bae -L/usr/local/lib -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a
        @(#)PROGRAM:ld PROJECT:ld-1167.5
        BUILD 01:45:05 Apr 30 2025
        configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
        will use ld-classic for: armv6 armv7 armv7s i386 armv6m armv7k armv7m armv7em
        LTO support using: LLVM version 17.0.0 (static support for 29, runtime is 29)
        TAPI support using: Apple TAPI version 17.0.0 (tapi-1700.0.3.5)
        Library search paths:
        	/usr/local/lib
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift
        Framework search paths:
        	/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks
        /usr/bin/c++  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -v -Wl,-v CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -o cmTC_88bae
        
      exitCode: 0
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:122 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Effective list of requested architectures (possibly empty)  : ""
      Effective list of architectures found in the ABI info binary: "arm64"
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:191 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Parsed CXX implicit include dir info: rv=done
        found start of include info
        found start of implicit include info
          add: [/usr/local/include]
          add: [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1]
          add: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
          add: [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
          add: [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        end of search list found
        collapse include dir [/usr/local/include] ==> [/usr/local/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include] ==> [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
        collapse include dir [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include] ==> [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        implicit include dirs: [/usr/local/include;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
      
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:227 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Parsed CXX implicit link information:
        link line regex: [^( *|.*[/\\])(ld[0-9]*(|\\.[a-rt-z][a-z]*|\\.s[a-np-z][a-z]*|\\.so[a-z]+)|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]
        linker tool regex: [^[ 	]*(->|")?[ 	]*(([^"]*[/\\])?(ld[0-9]*(|\\.[a-rt-z][a-z]*|\\.s[a-np-z][a-z]*|\\.so[a-z]+)))("|,| |$)]
        ignore line: [Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF']
        ignore line: []
        ignore line: [Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_88bae/fast]
        ignore line: [/Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_88bae.dir/build.make CMakeFiles/cmTC_88bae.dir/build]
        ignore line: [Building CXX object CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o]
        ignore line: [/usr/bin/c++   -arch arm64 -fPIE   -v -Wl -v -MD -MT CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -MF CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o.d -o CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -c /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
        ignore line: [Apple clang version 17.0.0 (clang-1700.0.13.5)]
        ignore line: [Target: arm64-apple-darwin24.5.0]
        ignore line: [Thread model: posix]
        ignore line: [InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin]
        ignore line: [clang++: warning: -Wl -v: 'linker' input unused [-Wunused-command-line-argument]]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1"]
        ignore line: [ "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -emit-obj -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name CMakeCXXCompilerABI.cpp -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.5 -fvisibility-inlines-hidden-static-local-var -fdefine-target-os-macros -fno-assume-unique-vtables -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +zcm -target-feature +zcz -target-feature +v8.5a -target-feature +aes -target-feature +altnzcv -target-feature +ccdp -target-feature +complxnum -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +fptoint -target-feature +fullfp16 -target-feature +jsconv -target-feature +lse -target-feature +neon -target-feature +pauth -target-feature +perfmon -target-feature +predres -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sb -target-feature +sha2 -target-feature +sha3 -target-feature +specrestrict -target-feature +ssbs -target-abi darwinpcs -debugger-tuning=lldb -fdebug-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF -target-linker-version 1167.5 -v -fcoverage-compilation-dir=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-r9GbxF -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17 -dependency-file CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o.d -skip-unused-modulemap-deps -MT CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -sys-header-deps -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fskip-odr-check-in-gmf -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -x c++ /opt/homebrew/share/cmake/Modules/CMakeCXXCompilerABI.cpp]
        ignore line: [clang -cc1 version 17.0.0 (clang-1700.0.13.5) default target arm64-apple-darwin24.5.0]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include"]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/SubFrameworks"]
        ignore line: [ignoring nonexistent directory "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks"]
        ignore line: [#include "..." search starts here:]
        ignore line: [#include <...> search starts here:]
        ignore line: [ /usr/local/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include]
        ignore line: [ /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory)]
        ignore line: [End of search list.]
        ignore line: [Linking CXX executable cmTC_88bae]
        ignore line: [/opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_88bae.dir/link.txt --verbose=1]
        ignore line: [Apple clang version 17.0.0 (clang-1700.0.13.5)]
        ignore line: [Target: arm64-apple-darwin24.5.0]
        ignore line: [Thread model: posix]
        ignore line: [InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin]
        link line: [ "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" -demangle -lto_library /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib -dynamic -arch arm64 -platform_version macos 15.0.0 15.5 -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -mllvm -enable-linkonceodr-outlining -o cmTC_88bae -L/usr/local/lib -search_paths_first -headerpad_max_install_names -v CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o -lc++ -lSystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld] ==> ignore
          arg [-demangle] ==> ignore
          arg [-lto_library] ==> ignore, skip following value
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/libLTO.dylib] ==> skip value of -lto_library
          arg [-dynamic] ==> ignore
          arg [-arch] ==> ignore
          arg [arm64] ==> ignore
          arg [-platform_version] ==> ignore
          arg [macos] ==> ignore
          arg [15.0.0] ==> ignore
          arg [15.5] ==> ignore
          arg [-syslibroot] ==> ignore
          arg [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk] ==> ignore
          arg [-mllvm] ==> ignore
          arg [-enable-linkonceodr-outlining] ==> ignore
          arg [-o] ==> ignore
          arg [cmTC_88bae] ==> ignore
          arg [-L/usr/local/lib] ==> dir [/usr/local/lib]
          arg [-search_paths_first] ==> ignore
          arg [-headerpad_max_install_names] ==> ignore
          arg [-v] ==> ignore
          arg [CMakeFiles/cmTC_88bae.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore
          arg [-lc++] ==> lib [c++]
          arg [-lSystem] ==> lib [System]
          arg [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a] ==> lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
        linker tool for 'CXX': /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
        Library search paths: [;/usr/local/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        Framework search paths: [;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
        remove lib [System]
        remove lib [/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/17/lib/darwin/libclang_rt.osx.a]
        collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
        collapse library dir [/usr/local/lib] ==> [/usr/local/lib]
        collapse library dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib]
        collapse library dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        collapse framework dir [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks] ==> [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
        implicit libs: [c++]
        implicit objs: []
        implicit dirs: [/usr/local/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/lib/swift]
        implicit fwks: [/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/System/Library/Frameworks]
      
      
  -
    kind: "message-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CMakeDetermineLinkerId.cmake:36 (message)"
      - "/opt/homebrew/share/cmake/Modules/CMakeDetermineCompilerABI.cmake:270 (cmake_determine_linker_id)"
      - "/opt/homebrew/share/cmake/Modules/CMakeTestCXXCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:12 (project)"
    message: |
      Running the CXX compiler's linker: "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld" "-v"
      @(#)PROGRAM:ld PROJECT:ld-1167.5
      BUILD 01:45:05 Apr 30 2025
      configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h armv6m armv7k armv7m armv7em
      will use ld-classic for: armv6 armv7 armv7s i386 armv6m armv7k armv7m armv7em
      LTO support using: LLVM version 17.0.0 (static support for 29, runtime is 29)
      TAPI support using: Apple TAPI version 17.0.0 (tapi-1700.0.3.5)
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "CompilerChecks.cmake:10 (check_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test REQUIRED_FLAGS_WERROR"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QcJHab"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QcJHab"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "REQUIRED_FLAGS_WERROR"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QcJHab'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_7d0c1/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_7d0c1.dir/build.make CMakeFiles/cmTC_7d0c1.dir/build
        Building C object CMakeFiles/cmTC_7d0c1.dir/src.c.o
        /usr/bin/cc -DREQUIRED_FLAGS_WERROR  -arch arm64 -fPIE   -Werror -MD -MT CMakeFiles/cmTC_7d0c1.dir/src.c.o -MF CMakeFiles/cmTC_7d0c1.dir/src.c.o.d -o CMakeFiles/cmTC_7d0c1.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QcJHab/src.c
        Linking C executable cmTC_7d0c1
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7d0c1.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_7d0c1.dir/src.c.o -o cmTC_7d0c1
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:19 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_STD_GNU99_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cHrXUC"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cHrXUC"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_STD_GNU99_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cHrXUC'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d631f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d631f.dir/build.make CMakeFiles/cmTC_d631f.dir/build
        Building C object CMakeFiles/cmTC_d631f.dir/src.c.o
        /usr/bin/cc -DWITH_STD_GNU99_FLAG  -Werror -arch arm64 -fPIE   -std=gnu99 -MD -MT CMakeFiles/cmTC_d631f.dir/src.c.o -MF CMakeFiles/cmTC_d631f.dir/src.c.o.d -o CMakeFiles/cmTC_d631f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cHrXUC/src.c
        Linking C executable cmTC_d631f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d631f.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_d631f.dir/src.c.o -o cmTC_d631f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:20 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WPEDANTIC_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-6R8N7c"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-6R8N7c"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WPEDANTIC_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-6R8N7c'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1921b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1921b.dir/build.make CMakeFiles/cmTC_1921b.dir/build
        Building C object CMakeFiles/cmTC_1921b.dir/src.c.o
        /usr/bin/cc -DWITH_WPEDANTIC_FLAG  -Werror -arch arm64 -fPIE   -Wpedantic -MD -MT CMakeFiles/cmTC_1921b.dir/src.c.o -MF CMakeFiles/cmTC_1921b.dir/src.c.o.d -o CMakeFiles/cmTC_1921b.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-6R8N7c/src.c
        Linking C executable cmTC_1921b
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1921b.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1921b.dir/src.c.o -o cmTC_1921b
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:21 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WALL_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BQ7REO"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BQ7REO"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WALL_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BQ7REO'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2c9c1/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2c9c1.dir/build.make CMakeFiles/cmTC_2c9c1.dir/build
        Building C object CMakeFiles/cmTC_2c9c1.dir/src.c.o
        /usr/bin/cc -DWITH_WALL_FLAG  -Werror -arch arm64 -fPIE   -Wall -MD -MT CMakeFiles/cmTC_2c9c1.dir/src.c.o -MF CMakeFiles/cmTC_2c9c1.dir/src.c.o.d -o CMakeFiles/cmTC_2c9c1.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BQ7REO/src.c
        Linking C executable cmTC_2c9c1
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2c9c1.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2c9c1.dir/src.c.o -o cmTC_2c9c1
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:22 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WSHADOW_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XPYV2u"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XPYV2u"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WSHADOW_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XPYV2u'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_baecb/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_baecb.dir/build.make CMakeFiles/cmTC_baecb.dir/build
        Building C object CMakeFiles/cmTC_baecb.dir/src.c.o
        /usr/bin/cc -DWITH_WSHADOW_FLAG  -Werror -arch arm64 -fPIE   -Wshadow -MD -MT CMakeFiles/cmTC_baecb.dir/src.c.o -MF CMakeFiles/cmTC_baecb.dir/src.c.o.d -o CMakeFiles/cmTC_baecb.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XPYV2u/src.c
        Linking C executable cmTC_baecb
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_baecb.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_baecb.dir/src.c.o -o cmTC_baecb
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:23 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WMISSING_PROTOTYPES_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5NnoH6"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5NnoH6"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WMISSING_PROTOTYPES_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5NnoH6'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_f5bdd/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_f5bdd.dir/build.make CMakeFiles/cmTC_f5bdd.dir/build
        Building C object CMakeFiles/cmTC_f5bdd.dir/src.c.o
        /usr/bin/cc -DWITH_WMISSING_PROTOTYPES_FLAG  -Werror -arch arm64 -fPIE   -Wmissing-prototypes -MD -MT CMakeFiles/cmTC_f5bdd.dir/src.c.o -MF CMakeFiles/cmTC_f5bdd.dir/src.c.o.d -o CMakeFiles/cmTC_f5bdd.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5NnoH6/src.c
        Linking C executable cmTC_f5bdd
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f5bdd.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_f5bdd.dir/src.c.o -o cmTC_f5bdd
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:24 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WCAST_ALIGN_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doyMWA"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doyMWA"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WCAST_ALIGN_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doyMWA'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2b80c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2b80c.dir/build.make CMakeFiles/cmTC_2b80c.dir/build
        Building C object CMakeFiles/cmTC_2b80c.dir/src.c.o
        /usr/bin/cc -DWITH_WCAST_ALIGN_FLAG  -Werror -arch arm64 -fPIE   -Wcast-align -MD -MT CMakeFiles/cmTC_2b80c.dir/src.c.o -MF CMakeFiles/cmTC_2b80c.dir/src.c.o.d -o CMakeFiles/cmTC_2b80c.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doyMWA/src.c
        Linking C executable cmTC_2b80c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2b80c.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2b80c.dir/src.c.o -o cmTC_2b80c
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:26 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_ADDRESS_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-R0Iz95"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-R0Iz95"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_ADDRESS_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-R0Iz95'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_b01f8/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_b01f8.dir/build.make CMakeFiles/cmTC_b01f8.dir/build
        Building C object CMakeFiles/cmTC_b01f8.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_ADDRESS_FLAG  -Werror -arch arm64 -fPIE   -Werror=address -MD -MT CMakeFiles/cmTC_b01f8.dir/src.c.o -MF CMakeFiles/cmTC_b01f8.dir/src.c.o.d -o CMakeFiles/cmTC_b01f8.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-R0Iz95/src.c
        Linking C executable cmTC_b01f8
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b01f8.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_b01f8.dir/src.c.o -o cmTC_b01f8
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:27 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WSTRICT_PROTOTYPES_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JLYEX4"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JLYEX4"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WSTRICT_PROTOTYPES_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JLYEX4'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_6e89f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_6e89f.dir/build.make CMakeFiles/cmTC_6e89f.dir/build
        Building C object CMakeFiles/cmTC_6e89f.dir/src.c.o
        /usr/bin/cc -DWITH_WSTRICT_PROTOTYPES_FLAG  -Werror -arch arm64 -fPIE   -Wstrict-prototypes -MD -MT CMakeFiles/cmTC_6e89f.dir/src.c.o -MF CMakeFiles/cmTC_6e89f.dir/src.c.o.d -o CMakeFiles/cmTC_6e89f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JLYEX4/src.c
        Linking C executable cmTC_6e89f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6e89f.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_6e89f.dir/src.c.o -o cmTC_6e89f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:28 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_STRICT_PROTOTYPES_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-OsmG2U"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-OsmG2U"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_STRICT_PROTOTYPES_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-OsmG2U'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_bbfe3/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_bbfe3.dir/build.make CMakeFiles/cmTC_bbfe3.dir/build
        Building C object CMakeFiles/cmTC_bbfe3.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_STRICT_PROTOTYPES_FLAG  -Werror -arch arm64 -fPIE   -Werror=strict-prototypes -MD -MT CMakeFiles/cmTC_bbfe3.dir/src.c.o -MF CMakeFiles/cmTC_bbfe3.dir/src.c.o.d -o CMakeFiles/cmTC_bbfe3.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-OsmG2U/src.c
        Linking C executable cmTC_bbfe3
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bbfe3.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_bbfe3.dir/src.c.o -o cmTC_bbfe3
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:29 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WWRITE_STRINGS_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-yNymAV"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-yNymAV"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WWRITE_STRINGS_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-yNymAV'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_7de51/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_7de51.dir/build.make CMakeFiles/cmTC_7de51.dir/build
        Building C object CMakeFiles/cmTC_7de51.dir/src.c.o
        /usr/bin/cc -DWITH_WWRITE_STRINGS_FLAG  -Werror -arch arm64 -fPIE   -Wwrite-strings -MD -MT CMakeFiles/cmTC_7de51.dir/src.c.o -MF CMakeFiles/cmTC_7de51.dir/src.c.o.d -o CMakeFiles/cmTC_7de51.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-yNymAV/src.c
        Linking C executable cmTC_7de51
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7de51.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_7de51.dir/src.c.o -o cmTC_7de51
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:30 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_WRITE_STRINGS_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wKZ0fN"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wKZ0fN"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_WRITE_STRINGS_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wKZ0fN'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_236de/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_236de.dir/build.make CMakeFiles/cmTC_236de.dir/build
        Building C object CMakeFiles/cmTC_236de.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_WRITE_STRINGS_FLAG  -Werror -arch arm64 -fPIE   -Werror=write-strings -MD -MT CMakeFiles/cmTC_236de.dir/src.c.o -MF CMakeFiles/cmTC_236de.dir/src.c.o.d -o CMakeFiles/cmTC_236de.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wKZ0fN/src.c
        Linking C executable cmTC_236de
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_236de.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_236de.dir/src.c.o -o cmTC_236de
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:31 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_IMPLICIT_FUNCTION_DECLARATION_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rn4cKO"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rn4cKO"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_IMPLICIT_FUNCTION_DECLARATION_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rn4cKO'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0921a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0921a.dir/build.make CMakeFiles/cmTC_0921a.dir/build
        Building C object CMakeFiles/cmTC_0921a.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_IMPLICIT_FUNCTION_DECLARATION_FLAG  -Werror -arch arm64 -fPIE   -Werror-implicit-function-declaration -MD -MT CMakeFiles/cmTC_0921a.dir/src.c.o -MF CMakeFiles/cmTC_0921a.dir/src.c.o.d -o CMakeFiles/cmTC_0921a.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-rn4cKO/src.c
        Linking C executable cmTC_0921a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0921a.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_0921a.dir/src.c.o -o cmTC_0921a
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:32 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WPOINTER_ARITH_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sWip2f"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sWip2f"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WPOINTER_ARITH_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sWip2f'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_fa0bb/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_fa0bb.dir/build.make CMakeFiles/cmTC_fa0bb.dir/build
        Building C object CMakeFiles/cmTC_fa0bb.dir/src.c.o
        /usr/bin/cc -DWITH_WPOINTER_ARITH_FLAG  -Werror -arch arm64 -fPIE   -Wpointer-arith -MD -MT CMakeFiles/cmTC_fa0bb.dir/src.c.o -MF CMakeFiles/cmTC_fa0bb.dir/src.c.o.d -o CMakeFiles/cmTC_fa0bb.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sWip2f/src.c
        Linking C executable cmTC_fa0bb
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa0bb.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_fa0bb.dir/src.c.o -o cmTC_fa0bb
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:33 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_POINTER_ARITH_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WDynlK"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WDynlK"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_POINTER_ARITH_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WDynlK'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d71c6/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d71c6.dir/build.make CMakeFiles/cmTC_d71c6.dir/build
        Building C object CMakeFiles/cmTC_d71c6.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_POINTER_ARITH_FLAG  -Werror -arch arm64 -fPIE   -Werror=pointer-arith -MD -MT CMakeFiles/cmTC_d71c6.dir/src.c.o -MF CMakeFiles/cmTC_d71c6.dir/src.c.o.d -o CMakeFiles/cmTC_d71c6.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WDynlK/src.c
        Linking C executable cmTC_d71c6
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d71c6.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_d71c6.dir/src.c.o -o cmTC_d71c6
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:34 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WDECLARATION_AFTER_STATEMENT_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-0OPMra"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-0OPMra"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WDECLARATION_AFTER_STATEMENT_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-0OPMra'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_dc789/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_dc789.dir/build.make CMakeFiles/cmTC_dc789.dir/build
        Building C object CMakeFiles/cmTC_dc789.dir/src.c.o
        /usr/bin/cc -DWITH_WDECLARATION_AFTER_STATEMENT_FLAG  -Werror -arch arm64 -fPIE   -Wdeclaration-after-statement -MD -MT CMakeFiles/cmTC_dc789.dir/src.c.o -MF CMakeFiles/cmTC_dc789.dir/src.c.o.d -o CMakeFiles/cmTC_dc789.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-0OPMra/src.c
        Linking C executable cmTC_dc789
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dc789.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_dc789.dir/src.c.o -o cmTC_dc789
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:35 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_DECLARATION_AFTER_STATEMENT_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zsI6JU"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zsI6JU"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_DECLARATION_AFTER_STATEMENT_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zsI6JU'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_6e81f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_6e81f.dir/build.make CMakeFiles/cmTC_6e81f.dir/build
        Building C object CMakeFiles/cmTC_6e81f.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_DECLARATION_AFTER_STATEMENT_FLAG  -Werror -arch arm64 -fPIE   -Werror=declaration-after-statement -MD -MT CMakeFiles/cmTC_6e81f.dir/src.c.o -MF CMakeFiles/cmTC_6e81f.dir/src.c.o.d -o CMakeFiles/cmTC_6e81f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zsI6JU/src.c
        Linking C executable cmTC_6e81f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6e81f.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_6e81f.dir/src.c.o -o cmTC_6e81f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:36 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WRETURN_TYPE_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1r5PE5"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1r5PE5"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WRETURN_TYPE_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1r5PE5'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_be4e2/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_be4e2.dir/build.make CMakeFiles/cmTC_be4e2.dir/build
        Building C object CMakeFiles/cmTC_be4e2.dir/src.c.o
        /usr/bin/cc -DWITH_WRETURN_TYPE_FLAG  -Werror -arch arm64 -fPIE   -Wreturn-type -MD -MT CMakeFiles/cmTC_be4e2.dir/src.c.o -MF CMakeFiles/cmTC_be4e2.dir/src.c.o.d -o CMakeFiles/cmTC_be4e2.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1r5PE5/src.c
        Linking C executable cmTC_be4e2
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_be4e2.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_be4e2.dir/src.c.o -o cmTC_be4e2
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:37 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_RETURN_TYPE_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-syiJju"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-syiJju"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_RETURN_TYPE_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-syiJju'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_21bc4/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_21bc4.dir/build.make CMakeFiles/cmTC_21bc4.dir/build
        Building C object CMakeFiles/cmTC_21bc4.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_RETURN_TYPE_FLAG  -Werror -arch arm64 -fPIE   -Werror=return-type -MD -MT CMakeFiles/cmTC_21bc4.dir/src.c.o -MF CMakeFiles/cmTC_21bc4.dir/src.c.o.d -o CMakeFiles/cmTC_21bc4.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-syiJju/src.c
        Linking C executable cmTC_21bc4
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_21bc4.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_21bc4.dir/src.c.o -o cmTC_21bc4
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:38 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WUNINITIALIZED_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-pJiHYR"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-pJiHYR"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WUNINITIALIZED_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-pJiHYR'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_63e2b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_63e2b.dir/build.make CMakeFiles/cmTC_63e2b.dir/build
        Building C object CMakeFiles/cmTC_63e2b.dir/src.c.o
        /usr/bin/cc -DWITH_WUNINITIALIZED_FLAG  -Werror -arch arm64 -fPIE   -Wuninitialized -MD -MT CMakeFiles/cmTC_63e2b.dir/src.c.o -MF CMakeFiles/cmTC_63e2b.dir/src.c.o.d -o CMakeFiles/cmTC_63e2b.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-pJiHYR/src.c
        Linking C executable cmTC_63e2b
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_63e2b.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_63e2b.dir/src.c.o -o cmTC_63e2b
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:39 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_UNINITIALIZED_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-MoS2l3"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-MoS2l3"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_UNINITIALIZED_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-MoS2l3'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_513a3/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_513a3.dir/build.make CMakeFiles/cmTC_513a3.dir/build
        Building C object CMakeFiles/cmTC_513a3.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_UNINITIALIZED_FLAG  -Werror -arch arm64 -fPIE   -Werror=uninitialized -MD -MT CMakeFiles/cmTC_513a3.dir/src.c.o -MF CMakeFiles/cmTC_513a3.dir/src.c.o.d -o CMakeFiles/cmTC_513a3.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-MoS2l3/src.c
        Linking C executable cmTC_513a3
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_513a3.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_513a3.dir/src.c.o -o cmTC_513a3
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:40 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WIMPLICIT_FALLTHROUGH_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-xVPtmt"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-xVPtmt"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WIMPLICIT_FALLTHROUGH_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-xVPtmt'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2feab/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2feab.dir/build.make CMakeFiles/cmTC_2feab.dir/build
        Building C object CMakeFiles/cmTC_2feab.dir/src.c.o
        /usr/bin/cc -DWITH_WIMPLICIT_FALLTHROUGH_FLAG  -Werror -arch arm64 -fPIE   -Wimplicit-fallthrough -MD -MT CMakeFiles/cmTC_2feab.dir/src.c.o -MF CMakeFiles/cmTC_2feab.dir/src.c.o.d -o CMakeFiles/cmTC_2feab.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-xVPtmt/src.c
        Linking C executable cmTC_2feab
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2feab.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2feab.dir/src.c.o -o cmTC_2feab
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:41 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_STRICT_OVERFLOW_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-qcLeMo"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-qcLeMo"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_STRICT_OVERFLOW_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-qcLeMo'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e9594/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e9594.dir/build.make CMakeFiles/cmTC_e9594.dir/build
        Building C object CMakeFiles/cmTC_e9594.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_STRICT_OVERFLOW_FLAG  -Werror -arch arm64 -fPIE   -Werror=strict-overflow -MD -MT CMakeFiles/cmTC_e9594.dir/src.c.o -MF CMakeFiles/cmTC_e9594.dir/src.c.o.d -o CMakeFiles/cmTC_e9594.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-qcLeMo/src.c
        Linking C executable cmTC_e9594
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e9594.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e9594.dir/src.c.o -o cmTC_e9594
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:42 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WSTRICT_OVERFLOW_2_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uCp8x3"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uCp8x3"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WSTRICT_OVERFLOW_2_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uCp8x3'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_fa90e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_fa90e.dir/build.make CMakeFiles/cmTC_fa90e.dir/build
        Building C object CMakeFiles/cmTC_fa90e.dir/src.c.o
        /usr/bin/cc -DWITH_WSTRICT_OVERFLOW_2_FLAG  -Werror -arch arm64 -fPIE   -Wstrict-overflow=2 -MD -MT CMakeFiles/cmTC_fa90e.dir/src.c.o -MF CMakeFiles/cmTC_fa90e.dir/src.c.o.d -o CMakeFiles/cmTC_fa90e.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uCp8x3/src.c
        Linking C executable cmTC_fa90e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa90e.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_fa90e.dir/src.c.o -o cmTC_fa90e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:43 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WNO_FORMAT_ZERO_LENGTH_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fNm7Sg"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fNm7Sg"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WNO_FORMAT_ZERO_LENGTH_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fNm7Sg'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1973f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1973f.dir/build.make CMakeFiles/cmTC_1973f.dir/build
        Building C object CMakeFiles/cmTC_1973f.dir/src.c.o
        /usr/bin/cc -DWITH_WNO_FORMAT_ZERO_LENGTH_FLAG  -Werror -arch arm64 -fPIE   -Wno-format-zero-length -MD -MT CMakeFiles/cmTC_1973f.dir/src.c.o -MF CMakeFiles/cmTC_1973f.dir/src.c.o.d -o CMakeFiles/cmTC_1973f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fNm7Sg/src.c
        Linking C executable cmTC_1973f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1973f.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1973f.dir/src.c.o -o cmTC_1973f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:44 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WMISSING_FIELD_INITIALIZERS_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wQrWoU"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wQrWoU"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WMISSING_FIELD_INITIALIZERS_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wQrWoU'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_01764/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_01764.dir/build.make CMakeFiles/cmTC_01764.dir/build
        Building C object CMakeFiles/cmTC_01764.dir/src.c.o
        /usr/bin/cc -DWITH_WMISSING_FIELD_INITIALIZERS_FLAG  -Werror -arch arm64 -fPIE   -Wmissing-field-initializers -MD -MT CMakeFiles/cmTC_01764.dir/src.c.o -MF CMakeFiles/cmTC_01764.dir/src.c.o.d -o CMakeFiles/cmTC_01764.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wQrWoU/src.c
        Linking C executable cmTC_01764
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_01764.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_01764.dir/src.c.o -o cmTC_01764
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:45 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WSIGN_COMPARE_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-t7UYVN"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-t7UYVN"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WSIGN_COMPARE_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-t7UYVN'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_fa76e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_fa76e.dir/build.make CMakeFiles/cmTC_fa76e.dir/build
        Building C object CMakeFiles/cmTC_fa76e.dir/src.c.o
        /usr/bin/cc -DWITH_WSIGN_COMPARE_FLAG  -Werror -arch arm64 -fPIE   -Wsign-compare -MD -MT CMakeFiles/cmTC_fa76e.dir/src.c.o -MF CMakeFiles/cmTC_fa76e.dir/src.c.o.d -o CMakeFiles/cmTC_fa76e.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-t7UYVN/src.c
        Linking C executable cmTC_fa76e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_fa76e.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_fa76e.dir/src.c.o -o cmTC_fa76e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:46 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WOLD_STYLE_DEFINITION_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I2I5IW"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I2I5IW"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WOLD_STYLE_DEFINITION_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I2I5IW'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_f6fa9/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_f6fa9.dir/build.make CMakeFiles/cmTC_f6fa9.dir/build
        Building C object CMakeFiles/cmTC_f6fa9.dir/src.c.o
        /usr/bin/cc -DWITH_WOLD_STYLE_DEFINITION_FLAG  -Werror -arch arm64 -fPIE   -Wold-style-definition -MD -MT CMakeFiles/cmTC_f6fa9.dir/src.c.o -MF CMakeFiles/cmTC_f6fa9.dir/src.c.o.d -o CMakeFiles/cmTC_f6fa9.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I2I5IW/src.c
        Linking C executable cmTC_f6fa9
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f6fa9.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_f6fa9.dir/src.c.o -o cmTC_f6fa9
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:47 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_OLD_STYLE_DEFINITION_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-8TDyzh"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-8TDyzh"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_OLD_STYLE_DEFINITION_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-8TDyzh'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_83f75/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_83f75.dir/build.make CMakeFiles/cmTC_83f75.dir/build
        Building C object CMakeFiles/cmTC_83f75.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_OLD_STYLE_DEFINITION_FLAG  -Werror -arch arm64 -fPIE   -Werror=old-style-definition -MD -MT CMakeFiles/cmTC_83f75.dir/src.c.o -MF CMakeFiles/cmTC_83f75.dir/src.c.o.d -o CMakeFiles/cmTC_83f75.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-8TDyzh/src.c
        Linking C executable cmTC_83f75
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_83f75.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_83f75.dir/src.c.o -o cmTC_83f75
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:48 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WIMPLICIT_INT_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1LO7U9"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1LO7U9"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WIMPLICIT_INT_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1LO7U9'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_7d27a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_7d27a.dir/build.make CMakeFiles/cmTC_7d27a.dir/build
        Building C object CMakeFiles/cmTC_7d27a.dir/src.c.o
        /usr/bin/cc -DWITH_WIMPLICIT_INT_FLAG  -Werror -arch arm64 -fPIE   -Wimplicit-int -MD -MT CMakeFiles/cmTC_7d27a.dir/src.c.o -MF CMakeFiles/cmTC_7d27a.dir/src.c.o.d -o CMakeFiles/cmTC_7d27a.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-1LO7U9/src.c
        Linking C executable cmTC_7d27a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7d27a.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_7d27a.dir/src.c.o -o cmTC_7d27a
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:49 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_IMPLICIT_INT_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3Urjds"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3Urjds"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_IMPLICIT_INT_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3Urjds'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_85a42/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_85a42.dir/build.make CMakeFiles/cmTC_85a42.dir/build
        Building C object CMakeFiles/cmTC_85a42.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_IMPLICIT_INT_FLAG  -Werror -arch arm64 -fPIE   -Werror=implicit-int -MD -MT CMakeFiles/cmTC_85a42.dir/src.c.o -MF CMakeFiles/cmTC_85a42.dir/src.c.o.d -o CMakeFiles/cmTC_85a42.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3Urjds/src.c
        Linking C executable cmTC_85a42
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_85a42.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_85a42.dir/src.c.o -o cmTC_85a42
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:50 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WINT_CONVERSION_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kuKMg0"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kuKMg0"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WINT_CONVERSION_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kuKMg0'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_93b32/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_93b32.dir/build.make CMakeFiles/cmTC_93b32.dir/build
        Building C object CMakeFiles/cmTC_93b32.dir/src.c.o
        /usr/bin/cc -DWITH_WINT_CONVERSION_FLAG  -Werror -arch arm64 -fPIE   -Wint-conversion -MD -MT CMakeFiles/cmTC_93b32.dir/src.c.o -MF CMakeFiles/cmTC_93b32.dir/src.c.o.d -o CMakeFiles/cmTC_93b32.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kuKMg0/src.c
        Linking C executable cmTC_93b32
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_93b32.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_93b32.dir/src.c.o -o cmTC_93b32
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:51 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_INT_CONVERSION_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-dNjKL3"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-dNjKL3"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_INT_CONVERSION_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-dNjKL3'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1832a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1832a.dir/build.make CMakeFiles/cmTC_1832a.dir/build
        Building C object CMakeFiles/cmTC_1832a.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_INT_CONVERSION_FLAG  -Werror -arch arm64 -fPIE   -Werror=int-conversion -MD -MT CMakeFiles/cmTC_1832a.dir/src.c.o -MF CMakeFiles/cmTC_1832a.dir/src.c.o.d -o CMakeFiles/cmTC_1832a.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-dNjKL3/src.c
        Linking C executable cmTC_1832a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1832a.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1832a.dir/src.c.o -o cmTC_1832a
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "CompilerChecks.cmake:53 (check_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test REQUIRED_FLAGS_WFORMAT"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Zpg8uG"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Zpg8uG"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "REQUIRED_FLAGS_WFORMAT"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Zpg8uG'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_72ac5/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_72ac5.dir/build.make CMakeFiles/cmTC_72ac5.dir/build
        Building C object CMakeFiles/cmTC_72ac5.dir/src.c.o
        /usr/bin/cc -DREQUIRED_FLAGS_WFORMAT  -Werror -arch arm64 -fPIE   -Wformat -MD -MT CMakeFiles/cmTC_72ac5.dir/src.c.o -MF CMakeFiles/cmTC_72ac5.dir/src.c.o.d -o CMakeFiles/cmTC_72ac5.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Zpg8uG/src.c
        Linking C executable cmTC_72ac5
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_72ac5.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_72ac5.dir/src.c.o -o cmTC_72ac5
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:58 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WFORMAT_SECURITY_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-neogp3"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-neogp3"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WFORMAT_SECURITY_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-neogp3'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_107e9/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_107e9.dir/build.make CMakeFiles/cmTC_107e9.dir/build
        Building C object CMakeFiles/cmTC_107e9.dir/src.c.o
        /usr/bin/cc -DWITH_WFORMAT_SECURITY_FLAG  -Werror -Wformat -arch arm64 -fPIE   -Wformat-security -MD -MT CMakeFiles/cmTC_107e9.dir/src.c.o -MF CMakeFiles/cmTC_107e9.dir/src.c.o.d -o CMakeFiles/cmTC_107e9.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-neogp3/src.c
        Linking C executable cmTC_107e9
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_107e9.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -Wformat -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_107e9.dir/src.c.o -o cmTC_107e9
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:59 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WERROR_FORMAT_SECURITY_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Ht6JOG"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Ht6JOG"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WERROR_FORMAT_SECURITY_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Ht6JOG'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e2c83/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e2c83.dir/build.make CMakeFiles/cmTC_e2c83.dir/build
        Building C object CMakeFiles/cmTC_e2c83.dir/src.c.o
        /usr/bin/cc -DWITH_WERROR_FORMAT_SECURITY_FLAG  -Werror -Wformat -arch arm64 -fPIE   -Werror=format-security -MD -MT CMakeFiles/cmTC_e2c83.dir/src.c.o -MF CMakeFiles/cmTC_e2c83.dir/src.c.o.d -o CMakeFiles/cmTC_e2c83.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Ht6JOG/src.c
        Linking C executable cmTC_e2c83
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e2c83.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -Wformat -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e2c83.dir/src.c.o -o cmTC_e2c83
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:67 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_FNO_COMMON_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2YnFuX"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2YnFuX"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_FNO_COMMON_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2YnFuX'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_979f7/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_979f7.dir/build.make CMakeFiles/cmTC_979f7.dir/build
        Building C object CMakeFiles/cmTC_979f7.dir/src.c.o
        /usr/bin/cc -DWITH_FNO_COMMON_FLAG  -Werror -Wformat -arch arm64 -fPIE   -fno-common -MD -MT CMakeFiles/cmTC_979f7.dir/src.c.o -MF CMakeFiles/cmTC_979f7.dir/src.c.o.d -o CMakeFiles/cmTC_979f7.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2YnFuX/src.c
        Linking C executable cmTC_979f7
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_979f7.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -Wformat -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_979f7.dir/src.c.o -o cmTC_979f7
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "cmake/Modules/CheckCCompilerFlagSSP.cmake:26 (check_c_source_compiles)"
      - "CompilerChecks.cmake:76 (check_c_compiler_flag_ssp)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_STACK_PROTECTOR_STRONG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-jqqFVM"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-jqqFVM"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_STACK_PROTECTOR_STRONG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-jqqFVM'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_52b6a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_52b6a.dir/build.make CMakeFiles/cmTC_52b6a.dir/build
        Building C object CMakeFiles/cmTC_52b6a.dir/src.c.o
        /usr/bin/cc -DWITH_STACK_PROTECTOR_STRONG  -fstack-protector-strong -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_52b6a.dir/src.c.o -MF CMakeFiles/cmTC_52b6a.dir/src.c.o.d -o CMakeFiles/cmTC_52b6a.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-jqqFVM/src.c
        Linking C executable cmTC_52b6a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_52b6a.dir/link.txt --verbose=1
        /usr/bin/cc  -fstack-protector-strong -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_52b6a.dir/src.c.o -o cmTC_52b6a
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "cmake/Modules/CheckCCompilerFlagSSP.cmake:26 (check_c_source_compiles)"
      - "CompilerChecks.cmake:95 (check_c_compiler_flag_ssp)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_STACK_CLASH_PROTECTION"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-X0voIH"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-X0voIH"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_STACK_CLASH_PROTECTION"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-X0voIH'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_cbbe8/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_cbbe8.dir/build.make CMakeFiles/cmTC_cbbe8.dir/build
        Building C object CMakeFiles/cmTC_cbbe8.dir/src.c.o
        /usr/bin/cc -DWITH_STACK_CLASH_PROTECTION  -fstack-clash-protection -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_cbbe8.dir/src.c.o -MF CMakeFiles/cmTC_cbbe8.dir/src.c.o.d -o CMakeFiles/cmTC_cbbe8.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-X0voIH/src.c
        clang: warning: argument unused during compilation: '-fstack-clash-protection' [-Wunused-command-line-argument]
        Linking C executable cmTC_cbbe8
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cbbe8.dir/link.txt --verbose=1
        /usr/bin/cc  -fstack-clash-protection -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_cbbe8.dir/src.c.o -o cmTC_cbbe8
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckCompilerFlag.cmake:18 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckCCompilerFlag.cmake:56 (cmake_check_compiler_flag)"
      - "cmake/Modules/AddCCompilerFlag.cmake:16 (check_c_compiler_flag)"
      - "CompilerChecks.cmake:106 (add_c_compiler_flag)"
      - "CMakeLists.txt:35 (include)"
    checks:
      - "Performing Test WITH_WNO_DEPRECATED_DECLARATIONS_FLAG"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EwOk2X"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EwOk2X"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "WITH_WNO_DEPRECATED_DECLARATIONS_FLAG"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EwOk2X'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_5a813/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_5a813.dir/build.make CMakeFiles/cmTC_5a813.dir/build
        Building C object CMakeFiles/cmTC_5a813.dir/src.c.o
        /usr/bin/cc -DWITH_WNO_DEPRECATED_DECLARATIONS_FLAG  -Werror -Wformat -arch arm64 -fPIE   -Wno-deprecated-declarations -MD -MT CMakeFiles/cmTC_5a813.dir/src.c.o -MF CMakeFiles/cmTC_5a813.dir/src.c.o.d -o CMakeFiles/cmTC_5a813.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EwOk2X/src.c
        Linking C executable cmTC_5a813
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5a813.dir/link.txt --verbose=1
        /usr/bin/cc  -Werror -Wformat -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_5a813.dir/src.c.o -o cmTC_5a813
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/FindThreads.cmake:97 (check_c_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/FindThreads.cmake:163 (_threads_check_libc)"
      - "CMakeLists.txt:65 (find_package)"
    checks:
      - "Performing Test CMAKE_HAVE_LIBC_PTHREAD"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ugk7KW"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ugk7KW"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "CMAKE_HAVE_LIBC_PTHREAD"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ugk7KW'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_9227b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_9227b.dir/build.make CMakeFiles/cmTC_9227b.dir/build
        Building C object CMakeFiles/cmTC_9227b.dir/src.c.o
        /usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD  -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_9227b.dir/src.c.o -MF CMakeFiles/cmTC_9227b.dir/src.c.o.d -o CMakeFiles/cmTC_9227b.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ugk7KW/src.c
        Linking C executable cmTC_9227b
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9227b.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_9227b.dir/src.c.o -o cmTC_9227b
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:47 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for argp_parse"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I77sXQ"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I77sXQ"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_ARGP_PARSE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I77sXQ'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_4e309/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_4e309.dir/build.make CMakeFiles/cmTC_4e309.dir/build
        Building C object CMakeFiles/cmTC_4e309.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=argp_parse -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_4e309.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_4e309.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_4e309.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-I77sXQ/CheckFunctionExists.c
        Linking C executable cmTC_4e309
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4e309.dir/link.txt --verbose=1
        Undefined symbols for architecture arm64:
          "_argp_parse", referenced from:
              _main in CheckFunctionExists.c.o
        ld: symbol(s) not found for architecture arm64
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=argp_parse -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_4e309.dir/CheckFunctionExists.c.o -o cmTC_4e309
        make[1]: *** [cmTC_4e309] Error 1
        make: *** [cmTC_4e309/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:50 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for argp.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BrHqTy"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BrHqTy"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_ARGP_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BrHqTy'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e23c0/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e23c0.dir/build.make CMakeFiles/cmTC_e23c0.dir/build
        Building C object CMakeFiles/cmTC_e23c0.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e23c0.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_e23c0.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_e23c0.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BrHqTy/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-BrHqTy/CheckIncludeFile.c:1:10: fatal error: 'argp.h' file not found
            1 | #include <argp.h>
              |          ^~~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_e23c0.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_e23c0/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:53 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for pty.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9jbw1s"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9jbw1s"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_PTY_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9jbw1s'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d03da/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d03da.dir/build.make CMakeFiles/cmTC_d03da.dir/build
        Building C object CMakeFiles/cmTC_d03da.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_d03da.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_d03da.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_d03da.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9jbw1s/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9jbw1s/CheckIncludeFile.c:1:10: fatal error: 'pty.h' file not found
            1 | #include <pty.h>
              |          ^~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_d03da.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_d03da/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:54 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for utmp.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Eg8VT1"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Eg8VT1"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_UTMP_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Eg8VT1'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_91289/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_91289.dir/build.make CMakeFiles/cmTC_91289.dir/build
        Building C object CMakeFiles/cmTC_91289.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_91289.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_91289.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_91289.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-Eg8VT1/CheckIncludeFile.c
        Linking C executable cmTC_91289
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_91289.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_91289.dir/CheckIncludeFile.c.o -o cmTC_91289
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:55 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for termios.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-L2KZT9"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-L2KZT9"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_TERMIOS_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-L2KZT9'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_c252e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_c252e.dir/build.make CMakeFiles/cmTC_c252e.dir/build
        Building C object CMakeFiles/cmTC_c252e.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_c252e.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_c252e.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_c252e.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-L2KZT9/CheckIncludeFile.c
        Linking C executable cmTC_c252e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c252e.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_c252e.dir/CheckIncludeFile.c.o -o cmTC_c252e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:56 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for unistd.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-CtL2Hb"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-CtL2Hb"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_UNISTD_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-CtL2Hb'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_8645c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_8645c.dir/build.make CMakeFiles/cmTC_8645c.dir/build
        Building C object CMakeFiles/cmTC_8645c.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_8645c.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_8645c.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_8645c.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-CtL2Hb/CheckIncludeFile.c
        Linking C executable cmTC_8645c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8645c.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_8645c.dir/CheckIncludeFile.c.o -o cmTC_8645c
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:57 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for stdint.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-TB5M2m"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-TB5M2m"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_STDINT_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-TB5M2m'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d999e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d999e.dir/build.make CMakeFiles/cmTC_d999e.dir/build
        Building C object CMakeFiles/cmTC_d999e.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_d999e.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_d999e.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_d999e.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-TB5M2m/CheckIncludeFile.c
        Linking C executable cmTC_d999e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d999e.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_d999e.dir/CheckIncludeFile.c.o -o cmTC_d999e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:58 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for util.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aWIaiR"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aWIaiR"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_UTIL_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aWIaiR'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_c14d6/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_c14d6.dir/build.make CMakeFiles/cmTC_c14d6.dir/build
        Building C object CMakeFiles/cmTC_c14d6.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_c14d6.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_c14d6.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_c14d6.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aWIaiR/CheckIncludeFile.c
        Linking C executable cmTC_c14d6
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c14d6.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_c14d6.dir/CheckIncludeFile.c.o -o cmTC_c14d6
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:59 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for libutil.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2AYbIq"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2AYbIq"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LIBUTIL_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2AYbIq'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_247a2/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_247a2.dir/build.make CMakeFiles/cmTC_247a2.dir/build
        Building C object CMakeFiles/cmTC_247a2.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_247a2.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_247a2.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_247a2.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2AYbIq/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-2AYbIq/CheckIncludeFile.c:1:10: fatal error: 'libutil.h' file not found
            1 | #include <libutil.h>
              |          ^~~~~~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_247a2.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_247a2/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:60 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for sys/time.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cwP2G7"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cwP2G7"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_SYS_TIME_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cwP2G7'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e7e58/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e7e58.dir/build.make CMakeFiles/cmTC_e7e58.dir/build
        Building C object CMakeFiles/cmTC_e7e58.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e7e58.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_e7e58.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_e7e58.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-cwP2G7/CheckIncludeFile.c
        Linking C executable cmTC_e7e58
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e7e58.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e7e58.dir/CheckIncludeFile.c.o -o cmTC_e7e58
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:61 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for sys/utime.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-24EciY"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-24EciY"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_SYS_UTIME_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-24EciY'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d40af/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d40af.dir/build.make CMakeFiles/cmTC_d40af.dir/build
        Building C object CMakeFiles/cmTC_d40af.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_d40af.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_d40af.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_d40af.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-24EciY/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-24EciY/CheckIncludeFile.c:1:10: fatal error: 'sys/utime.h' file not found
            1 | #include <sys/utime.h>
              |          ^~~~~~~~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_d40af.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_d40af/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:62 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for sys/param.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ATmoyu"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ATmoyu"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_SYS_PARAM_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ATmoyu'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0bf31/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0bf31.dir/build.make CMakeFiles/cmTC_0bf31.dir/build
        Building C object CMakeFiles/cmTC_0bf31.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_0bf31.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_0bf31.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_0bf31.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-ATmoyu/CheckIncludeFile.c
        Linking C executable cmTC_0bf31
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0bf31.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_0bf31.dir/CheckIncludeFile.c.o -o cmTC_0bf31
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:63 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for arpa/inet.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-nx7RZa"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-nx7RZa"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_ARPA_INET_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-nx7RZa'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_da280/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_da280.dir/build.make CMakeFiles/cmTC_da280.dir/build
        Building C object CMakeFiles/cmTC_da280.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_da280.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_da280.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_da280.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-nx7RZa/CheckIncludeFile.c
        Linking C executable cmTC_da280
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_da280.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_da280.dir/CheckIncludeFile.c.o -o cmTC_da280
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:64 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for byteswap.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9S2b3D"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9S2b3D"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_BYTESWAP_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9S2b3D'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1e4d2/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1e4d2.dir/build.make CMakeFiles/cmTC_1e4d2.dir/build
        Building C object CMakeFiles/cmTC_1e4d2.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_1e4d2.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_1e4d2.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_1e4d2.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9S2b3D/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9S2b3D/CheckIncludeFile.c:1:10: fatal error: 'byteswap.h' file not found
            1 | #include <byteswap.h>
              |          ^~~~~~~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_1e4d2.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_1e4d2/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:65 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for glob.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-u1mOI7"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-u1mOI7"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GLOB_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-u1mOI7'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_7dcbd/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_7dcbd.dir/build.make CMakeFiles/cmTC_7dcbd.dir/build
        Building C object CMakeFiles/cmTC_7dcbd.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_7dcbd.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_7dcbd.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_7dcbd.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-u1mOI7/CheckIncludeFile.c
        Linking C executable cmTC_7dcbd
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_7dcbd.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_7dcbd.dir/CheckIncludeFile.c.o -o cmTC_7dcbd
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:66 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for valgrind/valgrind.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kaSPnL"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kaSPnL"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_VALGRIND_VALGRIND_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kaSPnL'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_5d879/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_5d879.dir/build.make CMakeFiles/cmTC_5d879.dir/build
        Building C object CMakeFiles/cmTC_5d879.dir/CheckIncludeFile.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_5d879.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_5d879.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_5d879.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kaSPnL/CheckIncludeFile.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-kaSPnL/CheckIncludeFile.c:1:10: fatal error: 'valgrind/valgrind.h' file not found
            1 | #include <valgrind/valgrind.h>
              |          ^~~~~~~~~~~~~~~~~~~~~
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_5d879.dir/CheckIncludeFile.c.o] Error 1
        make: *** [cmTC_5d879/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:82 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for openssl/des.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sug1yV"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sug1yV"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_DES_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sug1yV'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_15b25/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_15b25.dir/build.make CMakeFiles/cmTC_15b25.dir/build
        Building C object CMakeFiles/cmTC_15b25.dir/CheckIncludeFile.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_15b25.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_15b25.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_15b25.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-sug1yV/CheckIncludeFile.c
        Linking C executable cmTC_15b25
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_15b25.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_15b25.dir/CheckIncludeFile.c.o -o cmTC_15b25  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:87 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for openssl/aes.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-GINBst"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-GINBst"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_AES_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-GINBst'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_dfd62/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_dfd62.dir/build.make CMakeFiles/cmTC_dfd62.dir/build
        Building C object CMakeFiles/cmTC_dfd62.dir/CheckIncludeFile.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_dfd62.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_dfd62.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_dfd62.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-GINBst/CheckIncludeFile.c
        Linking C executable cmTC_dfd62
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_dfd62.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_dfd62.dir/CheckIncludeFile.c.o -o cmTC_dfd62  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:96 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for openssl/ecdh.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QjhYWF"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QjhYWF"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_ECDH_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QjhYWF'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_bca0e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_bca0e.dir/build.make CMakeFiles/cmTC_bca0e.dir/build
        Building C object CMakeFiles/cmTC_bca0e.dir/CheckIncludeFile.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_bca0e.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_bca0e.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_bca0e.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-QjhYWF/CheckIncludeFile.c
        Linking C executable cmTC_bca0e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bca0e.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_bca0e.dir/CheckIncludeFile.c.o -o cmTC_bca0e  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:97 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for openssl/ec.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3YSffs"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3YSffs"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_EC_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3YSffs'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2009e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2009e.dir/build.make CMakeFiles/cmTC_2009e.dir/build
        Building C object CMakeFiles/cmTC_2009e.dir/CheckIncludeFile.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_2009e.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_2009e.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_2009e.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3YSffs/CheckIncludeFile.c
        Linking C executable cmTC_2009e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2009e.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2009e.dir/CheckIncludeFile.c.o -o cmTC_2009e  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckIncludeFile.cmake:99 (try_compile)"
      - "ConfigureChecks.cmake:98 (check_include_file)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for openssl/ecdsa.h"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WSe7cf"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WSe7cf"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_ECDSA_H"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WSe7cf'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_af640/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_af640.dir/build.make CMakeFiles/cmTC_af640.dir/build
        Building C object CMakeFiles/cmTC_af640.dir/CheckIncludeFile.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_af640.dir/CheckIncludeFile.c.o -MF CMakeFiles/cmTC_af640.dir/CheckIncludeFile.c.o.d -o CMakeFiles/cmTC_af640.dir/CheckIncludeFile.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WSe7cf/CheckIncludeFile.c
        Linking C executable cmTC_af640
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_af640.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_af640.dir/CheckIncludeFile.c.o -o cmTC_af640  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:100 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for EVP_KDF_CTX_new_id"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-chKAWJ"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-chKAWJ"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_EVP_KDF_CTX_NEW_ID"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-chKAWJ'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_bf60c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_bf60c.dir/build.make CMakeFiles/cmTC_bf60c.dir/build
        Building C object CMakeFiles/cmTC_bf60c.dir/CheckFunctionExists.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -DCHECK_FUNCTION_EXISTS=EVP_KDF_CTX_new_id -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_bf60c.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_bf60c.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_bf60c.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-chKAWJ/CheckFunctionExists.c
        Linking C executable cmTC_bf60c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_bf60c.dir/link.txt --verbose=1
        Undefined symbols for architecture arm64:
          "_EVP_KDF_CTX_new_id", referenced from:
              _main in CheckFunctionExists.c.o
        ld: symbol(s) not found for architecture arm64
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=EVP_KDF_CTX_new_id -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_bf60c.dir/CheckFunctionExists.c.o -o cmTC_bf60c  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        make[1]: *** [cmTC_bf60c] Error 1
        make: *** [cmTC_bf60c/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:101 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for EVP_KDF_CTX_new"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-i7KI0D"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-i7KI0D"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_EVP_KDF_CTX_NEW"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-i7KI0D'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_6d0f6/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_6d0f6.dir/build.make CMakeFiles/cmTC_6d0f6.dir/build
        Building C object CMakeFiles/cmTC_6d0f6.dir/CheckFunctionExists.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -DCHECK_FUNCTION_EXISTS=EVP_KDF_CTX_new -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_6d0f6.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_6d0f6.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_6d0f6.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-i7KI0D/CheckFunctionExists.c
        Linking C executable cmTC_6d0f6
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_6d0f6.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=EVP_KDF_CTX_new -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_6d0f6.dir/CheckFunctionExists.c.o -o cmTC_6d0f6  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:102 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for FIPS_mode"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-f0MSnl"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-f0MSnl"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_FIPS_MODE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-f0MSnl'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_b2eef/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_b2eef.dir/build.make CMakeFiles/cmTC_b2eef.dir/build
        Building C object CMakeFiles/cmTC_b2eef.dir/CheckFunctionExists.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -DCHECK_FUNCTION_EXISTS=FIPS_mode -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_b2eef.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_b2eef.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_b2eef.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-f0MSnl/CheckFunctionExists.c
        Linking C executable cmTC_b2eef
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b2eef.dir/link.txt --verbose=1
        Undefined symbols for architecture arm64:
          "_FIPS_mode", referenced from:
              _main in CheckFunctionExists.c.o
        ld: symbol(s) not found for architecture arm64
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=FIPS_mode -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_b2eef.dir/CheckFunctionExists.c.o -o cmTC_b2eef  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        make[1]: *** [cmTC_b2eef] Error 1
        make: *** [cmTC_b2eef/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:103 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for RAND_priv_bytes"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XF43rs"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XF43rs"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_RAND_PRIV_BYTES"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XF43rs'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_cfe1c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_cfe1c.dir/build.make CMakeFiles/cmTC_cfe1c.dir/build
        Building C object CMakeFiles/cmTC_cfe1c.dir/CheckFunctionExists.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -DCHECK_FUNCTION_EXISTS=RAND_priv_bytes -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_cfe1c.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_cfe1c.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_cfe1c.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-XF43rs/CheckFunctionExists.c
        Linking C executable cmTC_cfe1c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_cfe1c.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=RAND_priv_bytes -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_cfe1c.dir/CheckFunctionExists.c.o -o cmTC_cfe1c  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:104 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for EVP_chacha20"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fFQMwD"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fFQMwD"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_OPENSSL_EVP_CHACHA20"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fFQMwD'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_5aa3c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_5aa3c.dir/build.make CMakeFiles/cmTC_5aa3c.dir/build
        Building C object CMakeFiles/cmTC_5aa3c.dir/CheckFunctionExists.c.o
        /usr/bin/cc  -isystem /opt/homebrew/Cellar/openssl@3/3.5.0/include -DCHECK_FUNCTION_EXISTS=EVP_chacha20 -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_5aa3c.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_5aa3c.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_5aa3c.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-fFQMwD/CheckFunctionExists.c
        Linking C executable cmTC_5aa3c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_5aa3c.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=EVP_chacha20 -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_5aa3c.dir/CheckFunctionExists.c.o -o cmTC_5aa3c  /opt/homebrew/Cellar/openssl@3/3.5.0/lib/libcrypto.dylib
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:131 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for isblank"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_ISBLANK"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_8e7c8/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_8e7c8.dir/build.make CMakeFiles/cmTC_8e7c8.dir/build
        Building C object CMakeFiles/cmTC_8e7c8.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=isblank -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_8e7c8.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_8e7c8.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_8e7c8.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'isblank' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS isblank
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-v8YZnk/CheckFunctionExists.c:7:3: note: 'isblank' is a builtin with type 'int (int)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS isblank
              |                               ^
        1 warning generated.
        Linking C executable cmTC_8e7c8
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8e7c8.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=isblank -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_8e7c8.dir/CheckFunctionExists.c.o -o cmTC_8e7c8
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:132 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for strncpy"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_STRNCPY"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1cbf3/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1cbf3.dir/build.make CMakeFiles/cmTC_1cbf3.dir/build
        Building C object CMakeFiles/cmTC_1cbf3.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=strncpy -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_1cbf3.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_1cbf3.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_1cbf3.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'strncpy' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strncpy
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DigKCW/CheckFunctionExists.c:7:3: note: 'strncpy' is a builtin with type 'char *(char *, const char *, unsigned long)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strncpy
              |                               ^
        1 warning generated.
        Linking C executable cmTC_1cbf3
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1cbf3.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=strncpy -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1cbf3.dir/CheckFunctionExists.c.o -o cmTC_1cbf3
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:133 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for strndup"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_STRNDUP"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0e1bb/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0e1bb.dir/build.make CMakeFiles/cmTC_0e1bb.dir/build
        Building C object CMakeFiles/cmTC_0e1bb.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=strndup -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_0e1bb.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_0e1bb.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_0e1bb.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'strndup' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strndup
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JIJgNm/CheckFunctionExists.c:7:3: note: 'strndup' is a builtin with type 'char *(const char *, unsigned long)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strndup
              |                               ^
        1 warning generated.
        Linking C executable cmTC_0e1bb
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0e1bb.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=strndup -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_0e1bb.dir/CheckFunctionExists.c.o -o cmTC_0e1bb
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:134 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for strtoull"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_STRTOULL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e21a4/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e21a4.dir/build.make CMakeFiles/cmTC_e21a4.dir/build
        Building C object CMakeFiles/cmTC_e21a4.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=strtoull -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e21a4.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_e21a4.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_e21a4.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'strtoull' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strtoull
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPmBtO/CheckFunctionExists.c:7:3: note: 'strtoull' is a builtin with type 'unsigned long long (const char *, char **, int)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS strtoull
              |                               ^
        1 warning generated.
        Linking C executable cmTC_e21a4
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e21a4.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=strtoull -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e21a4.dir/CheckFunctionExists.c.o -o cmTC_e21a4
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:135 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for explicit_bzero"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-SbWvXn"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-SbWvXn"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_EXPLICIT_BZERO"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-SbWvXn'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_52428/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_52428.dir/build.make CMakeFiles/cmTC_52428.dir/build
        Building C object CMakeFiles/cmTC_52428.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=explicit_bzero -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_52428.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_52428.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_52428.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-SbWvXn/CheckFunctionExists.c
        Linking C executable cmTC_52428
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_52428.dir/link.txt --verbose=1
        Undefined symbols for architecture arm64:
          "_explicit_bzero", referenced from:
              _main in CheckFunctionExists.c.o
        ld: symbol(s) not found for architecture arm64
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=explicit_bzero -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_52428.dir/CheckFunctionExists.c.o -o cmTC_52428
        make[1]: *** [cmTC_52428] Error 1
        make: *** [cmTC_52428/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:136 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for memset_s"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPPt5y"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPPt5y"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_MEMSET_S"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPPt5y'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_0cc6a/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_0cc6a.dir/build.make CMakeFiles/cmTC_0cc6a.dir/build
        Building C object CMakeFiles/cmTC_0cc6a.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=memset_s -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_0cc6a.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_0cc6a.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_0cc6a.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-KPPt5y/CheckFunctionExists.c
        Linking C executable cmTC_0cc6a
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_0cc6a.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=memset_s -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_0cc6a.dir/CheckFunctionExists.c.o -o cmTC_0cc6a
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckSourceCompiles.cmake:89 (cmake_check_source_compiles)"
      - "/opt/homebrew/share/cmake/Modules/CheckStructHasMember.cmake:85 (check_source_compiles)"
      - "ConfigureChecks.cmake:139 (check_struct_has_member)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_GLOB_GL_FLAGS_MEMBER"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EL8qKw"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EL8qKw"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GLOB_GL_FLAGS_MEMBER"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EL8qKw'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d364f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d364f.dir/build.make CMakeFiles/cmTC_d364f.dir/build
        Building C object CMakeFiles/cmTC_d364f.dir/src.c.o
        /usr/bin/cc -DHAVE_GLOB_GL_FLAGS_MEMBER  -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_d364f.dir/src.c.o -MF CMakeFiles/cmTC_d364f.dir/src.c.o.d -o CMakeFiles/cmTC_d364f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-EL8qKw/src.c
        Linking C executable cmTC_d364f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d364f.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_d364f.dir/src.c.o -o cmTC_d364f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:140 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for glob"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JmiiZ9"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JmiiZ9"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GLOB"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JmiiZ9'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_f9023/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_f9023.dir/build.make CMakeFiles/cmTC_f9023.dir/build
        Building C object CMakeFiles/cmTC_f9023.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=glob -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_f9023.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_f9023.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_f9023.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-JmiiZ9/CheckFunctionExists.c
        Linking C executable cmTC_f9023
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f9023.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=glob -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_f9023.dir/CheckFunctionExists.c.o -o cmTC_f9023
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:144 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for vsnprintf"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_VSNPRINTF"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_206f2/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_206f2.dir/build.make CMakeFiles/cmTC_206f2.dir/build
        Building C object CMakeFiles/cmTC_206f2.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=vsnprintf -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_206f2.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_206f2.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_206f2.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'vsnprintf' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS vsnprintf
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-9vPwd8/CheckFunctionExists.c:7:3: note: 'vsnprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, __builtin_va_list)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS vsnprintf
              |                               ^
        1 warning generated.
        Linking C executable cmTC_206f2
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_206f2.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=vsnprintf -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_206f2.dir/CheckFunctionExists.c.o -o cmTC_206f2
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:145 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for snprintf"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_SNPRINTF"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_84306/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_84306.dir/build.make CMakeFiles/cmTC_84306.dir/build
        Building C object CMakeFiles/cmTC_84306.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=snprintf -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_84306.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_84306.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_84306.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX/CheckFunctionExists.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX/CheckFunctionExists.c:7:3: warning: incompatible redeclaration of library function 'snprintf' [-Wincompatible-library-redeclaration]
            7 |   CHECK_FUNCTION_EXISTS(void);
              |   ^
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS snprintf
              |                               ^
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-m9eKzX/CheckFunctionExists.c:7:3: note: 'snprintf' is a builtin with type 'int (char *restrict, unsigned long, const char *restrict, ...)'
        <command line>:1:31: note: expanded from macro 'CHECK_FUNCTION_EXISTS'
            1 | #define CHECK_FUNCTION_EXISTS snprintf
              |                               ^
        1 warning generated.
        Linking C executable cmTC_84306
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_84306.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=snprintf -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_84306.dir/CheckFunctionExists.c.o -o cmTC_84306
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:175 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for poll"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-gGb0Mf"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-gGb0Mf"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_POLL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-gGb0Mf'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_4b1d6/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_4b1d6.dir/build.make CMakeFiles/cmTC_4b1d6.dir/build
        Building C object CMakeFiles/cmTC_4b1d6.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=poll -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_4b1d6.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_4b1d6.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_4b1d6.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-gGb0Mf/CheckFunctionExists.c
        Linking C executable cmTC_4b1d6
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_4b1d6.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=poll -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_4b1d6.dir/CheckFunctionExists.c.o -o cmTC_4b1d6
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:176 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for select"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-LBYubQ"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-LBYubQ"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_SELECT"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-LBYubQ'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1313c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1313c.dir/build.make CMakeFiles/cmTC_1313c.dir/build
        Building C object CMakeFiles/cmTC_1313c.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=select -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_1313c.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_1313c.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_1313c.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-LBYubQ/CheckFunctionExists.c
        Linking C executable cmTC_1313c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1313c.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=select -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1313c.dir/CheckFunctionExists.c.o -o cmTC_1313c
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:177 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for getaddrinfo"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-HBMSLd"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-HBMSLd"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GETADDRINFO"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-HBMSLd'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e1000/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e1000.dir/build.make CMakeFiles/cmTC_e1000.dir/build
        Building C object CMakeFiles/cmTC_e1000.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=getaddrinfo -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e1000.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_e1000.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_e1000.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-HBMSLd/CheckFunctionExists.c
        Linking C executable cmTC_e1000
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e1000.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=getaddrinfo -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e1000.dir/CheckFunctionExists.c.o -o cmTC_e1000
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:160 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:65 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "ConfigureChecks.cmake:179 (check_symbol_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for ntohll"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uqvZ8l"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uqvZ8l"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_NTOHLL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uqvZ8l'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2366e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2366e.dir/build.make CMakeFiles/cmTC_2366e.dir/build
        Building C object CMakeFiles/cmTC_2366e.dir/CheckSymbolExists.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_2366e.dir/CheckSymbolExists.c.o -MF CMakeFiles/cmTC_2366e.dir/CheckSymbolExists.c.o.d -o CMakeFiles/cmTC_2366e.dir/CheckSymbolExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-uqvZ8l/CheckSymbolExists.c
        Linking C executable cmTC_2366e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2366e.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2366e.dir/CheckSymbolExists.c.o -o cmTC_2366e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:160 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckSymbolExists.cmake:65 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "ConfigureChecks.cmake:180 (check_symbol_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for htonll"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-oqjKbX"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-oqjKbX"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_HTONLL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-oqjKbX'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_22966/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_22966.dir/build.make CMakeFiles/cmTC_22966.dir/build
        Building C object CMakeFiles/cmTC_22966.dir/CheckSymbolExists.c.o
        /usr/bin/cc   -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_22966.dir/CheckSymbolExists.c.o -MF CMakeFiles/cmTC_22966.dir/CheckSymbolExists.c.o.d -o CMakeFiles/cmTC_22966.dir/CheckSymbolExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-oqjKbX/CheckSymbolExists.c
        Linking C executable cmTC_22966
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_22966.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_22966.dir/CheckSymbolExists.c.o -o cmTC_22966
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:112 (try_compile)"
      - "ConfigureChecks.cmake:187 (check_library_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for getaddrinfo in socket"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WiX7nx"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WiX7nx"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LIBSOCKET"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WiX7nx'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2f3d1/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2f3d1.dir/build.make CMakeFiles/cmTC_2f3d1.dir/build
        Building C object CMakeFiles/cmTC_2f3d1.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=getaddrinfo -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_2f3d1.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_2f3d1.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_2f3d1.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-WiX7nx/CheckFunctionExists.c
        Linking C executable cmTC_2f3d1
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2f3d1.dir/link.txt --verbose=1
        ld: library 'socket' not found
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=getaddrinfo -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2f3d1.dir/CheckFunctionExists.c.o -o cmTC_2f3d1  -lsocket
        make[1]: *** [cmTC_2f3d1] Error 1
        make: *** [cmTC_2f3d1/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:112 (try_compile)"
      - "ConfigureChecks.cmake:194 (check_library_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for inet_pton in nsl"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-PQVkjv"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-PQVkjv"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LIBNSL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-PQVkjv'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_10d41/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_10d41.dir/build.make CMakeFiles/cmTC_10d41.dir/build
        Building C object CMakeFiles/cmTC_10d41.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=inet_pton -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_10d41.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_10d41.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_10d41.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-PQVkjv/CheckFunctionExists.c
        Linking C executable cmTC_10d41
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_10d41.dir/link.txt --verbose=1
        ld: library 'nsl' not found
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=inet_pton -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_10d41.dir/CheckFunctionExists.c.o -o cmTC_10d41  -lnsl
        make[1]: *** [cmTC_10d41] Error 1
        make: *** [cmTC_10d41/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:112 (try_compile)"
      - "ConfigureChecks.cmake:200 (check_library_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for nanosleep in rt"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-g1e0ut"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-g1e0ut"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LIBRT"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-g1e0ut'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_1af4f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_1af4f.dir/build.make CMakeFiles/cmTC_1af4f.dir/build
        Building C object CMakeFiles/cmTC_1af4f.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=nanosleep -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_1af4f.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_1af4f.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_1af4f.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-g1e0ut/CheckFunctionExists.c
        Linking C executable cmTC_1af4f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1af4f.dir/link.txt --verbose=1
        ld: library 'rt' not found
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=nanosleep -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_1af4f.dir/CheckFunctionExists.c.o -o cmTC_1af4f  -lrt
        make[1]: *** [cmTC_1af4f] Error 1
        make: *** [cmTC_1af4f/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:112 (try_compile)"
      - "ConfigureChecks.cmake:203 (check_library_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for clock_gettime in rt"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-869O6d"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-869O6d"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_CLOCK_GETTIME"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-869O6d'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_9b522/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_9b522.dir/build.make CMakeFiles/cmTC_9b522.dir/build
        Building C object CMakeFiles/cmTC_9b522.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=clock_gettime -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_9b522.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_9b522.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_9b522.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-869O6d/CheckFunctionExists.c
        Linking C executable cmTC_9b522
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9b522.dir/link.txt --verbose=1
        ld: library 'rt' not found
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=clock_gettime -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_9b522.dir/CheckFunctionExists.c.o -o cmTC_9b522  -lrt
        make[1]: *** [cmTC_9b522] Error 1
        make: *** [cmTC_9b522/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckLibraryExists.cmake:112 (try_compile)"
      - "ConfigureChecks.cmake:208 (check_library_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for forkpty in util"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wHlGfK"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wHlGfK"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LIBUTIL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wHlGfK'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e7f52/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e7f52.dir/build.make CMakeFiles/cmTC_e7f52.dir/build
        Building C object CMakeFiles/cmTC_e7f52.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=forkpty -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e7f52.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_e7f52.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_e7f52.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-wHlGfK/CheckFunctionExists.c
        Linking C executable cmTC_e7f52
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e7f52.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=forkpty -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e7f52.dir/CheckFunctionExists.c.o -o cmTC_e7f52  -lutil
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:209 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for cfmakeraw"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-AFU92J"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-AFU92J"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_CFMAKERAW"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-AFU92J'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_e4bd5/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_e4bd5.dir/build.make CMakeFiles/cmTC_e4bd5.dir/build
        Building C object CMakeFiles/cmTC_e4bd5.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=cfmakeraw -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_e4bd5.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_e4bd5.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_e4bd5.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-AFU92J/CheckFunctionExists.c
        Linking C executable cmTC_e4bd5
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_e4bd5.dir/link.txt --verbose=1
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=cfmakeraw -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_e4bd5.dir/CheckFunctionExists.c.o -o cmTC_e4bd5
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/CheckFunctionExists.cmake:93 (try_compile)"
      - "ConfigureChecks.cmake:210 (check_function_exists)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Looking for __strtoull"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aJNT3l"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aJNT3l"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE___STRTOULL"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aJNT3l'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_8809b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_8809b.dir/build.make CMakeFiles/cmTC_8809b.dir/build
        Building C object CMakeFiles/cmTC_8809b.dir/CheckFunctionExists.c.o
        /usr/bin/cc   -DCHECK_FUNCTION_EXISTS=__strtoull -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_8809b.dir/CheckFunctionExists.c.o -MF CMakeFiles/cmTC_8809b.dir/CheckFunctionExists.c.o.d -o CMakeFiles/cmTC_8809b.dir/CheckFunctionExists.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-aJNT3l/CheckFunctionExists.c
        Linking C executable cmTC_8809b
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8809b.dir/link.txt --verbose=1
        Undefined symbols for architecture arm64:
          "___strtoull", referenced from:
              _main in CheckFunctionExists.c.o
        ld: symbol(s) not found for architecture arm64
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -DCHECK_FUNCTION_EXISTS=__strtoull -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_8809b.dir/CheckFunctionExists.c.o -o cmTC_8809b
        make[1]: *** [cmTC_8809b] Error 1
        make: *** [cmTC_8809b/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:259 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_GCC_THREAD_LOCAL_STORAGE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-IWxtxA"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-IWxtxA"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GCC_THREAD_LOCAL_STORAGE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-IWxtxA'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_d336b/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_d336b.dir/build.make CMakeFiles/cmTC_d336b.dir/build
        Building C object CMakeFiles/cmTC_d336b.dir/src.c.o
        /usr/bin/cc -DHAVE_GCC_THREAD_LOCAL_STORAGE  -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_d336b.dir/src.c.o -MF CMakeFiles/cmTC_d336b.dir/src.c.o.d -o CMakeFiles/cmTC_d336b.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-IWxtxA/src.c
        Linking C executable cmTC_d336b
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d336b.dir/link.txt --verbose=1
        /usr/bin/cc  -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_d336b.dir/src.c.o -o cmTC_d336b
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:266 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_MSC_THREAD_LOCAL_STORAGE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3bSDNg"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3bSDNg"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_MSC_THREAD_LOCAL_STORAGE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3bSDNg'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_34b06/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_34b06.dir/build.make CMakeFiles/cmTC_34b06.dir/build
        Building C object CMakeFiles/cmTC_34b06.dir/src.c.o
        /usr/bin/cc -DHAVE_MSC_THREAD_LOCAL_STORAGE  -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_34b06.dir/src.c.o -MF CMakeFiles/cmTC_34b06.dir/src.c.o.d -o CMakeFiles/cmTC_34b06.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3bSDNg/src.c
        /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3bSDNg/src.c:2:1: error: '__declspec' attributes are not enabled; use '-fdeclspec' or '-fms-extensions' to enable support for __declspec attributes
            2 | __declspec(thread) int tls;
              | ^
        1 error generated.
        make[1]: *** [CMakeFiles/cmTC_34b06.dir/src.c.o] Error 1
        make: *** [cmTC_34b06/fast] Error 2
        
      exitCode: 2
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:290 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_CONSTRUCTOR_ATTRIBUTE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-7302fd"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-7302fd"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_CONSTRUCTOR_ATTRIBUTE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-7302fd'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_9197c/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_9197c.dir/build.make CMakeFiles/cmTC_9197c.dir/build
        Building C object CMakeFiles/cmTC_9197c.dir/src.c.o
        /usr/bin/cc -DHAVE_CONSTRUCTOR_ATTRIBUTE  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_9197c.dir/src.c.o -MF CMakeFiles/cmTC_9197c.dir/src.c.o.d -o CMakeFiles/cmTC_9197c.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-7302fd/src.c
        Linking C executable cmTC_9197c
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9197c.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_9197c.dir/src.c.o -o cmTC_9197c
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:302 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_DESTRUCTOR_ATTRIBUTE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-czjSdy"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-czjSdy"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_DESTRUCTOR_ATTRIBUTE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-czjSdy'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_2dc4f/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_2dc4f.dir/build.make CMakeFiles/cmTC_2dc4f.dir/build
        Building C object CMakeFiles/cmTC_2dc4f.dir/src.c.o
        /usr/bin/cc -DHAVE_DESTRUCTOR_ATTRIBUTE  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_2dc4f.dir/src.c.o -MF CMakeFiles/cmTC_2dc4f.dir/src.c.o.d -o CMakeFiles/cmTC_2dc4f.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-czjSdy/src.c
        Linking C executable cmTC_2dc4f
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_2dc4f.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_2dc4f.dir/src.c.o -o cmTC_2dc4f
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:314 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_FALLTHROUGH_ATTRIBUTE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3GASI3"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3GASI3"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_FALLTHROUGH_ATTRIBUTE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3GASI3'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_f150e/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_f150e.dir/build.make CMakeFiles/cmTC_f150e.dir/build
        Building C object CMakeFiles/cmTC_f150e.dir/src.c.o
        /usr/bin/cc -DHAVE_FALLTHROUGH_ATTRIBUTE  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_f150e.dir/src.c.o -MF CMakeFiles/cmTC_f150e.dir/src.c.o.d -o CMakeFiles/cmTC_f150e.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-3GASI3/src.c
        Linking C executable cmTC_f150e
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_f150e.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_f150e.dir/src.c.o -o cmTC_f150e
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:332 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_WEAK_ATTRIBUTE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doLF5y"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doLF5y"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_WEAK_ATTRIBUTE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doLF5y'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_efac6/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_efac6.dir/build.make CMakeFiles/cmTC_efac6.dir/build
        Building C object CMakeFiles/cmTC_efac6.dir/src.c.o
        /usr/bin/cc -DHAVE_WEAK_ATTRIBUTE  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_efac6.dir/src.c.o -MF CMakeFiles/cmTC_efac6.dir/src.c.o.d -o CMakeFiles/cmTC_efac6.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-doLF5y/src.c
        Linking C executable cmTC_efac6
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_efac6.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_efac6.dir/src.c.o -o cmTC_efac6
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:350 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_UNUSED_ATTRIBUTE"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DDCqHX"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DDCqHX"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_UNUSED_ATTRIBUTE"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DDCqHX'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_9183d/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_9183d.dir/build.make CMakeFiles/cmTC_9183d.dir/build
        Building C object CMakeFiles/cmTC_9183d.dir/src.c.o
        /usr/bin/cc -DHAVE_UNUSED_ATTRIBUTE  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_9183d.dir/src.c.o -MF CMakeFiles/cmTC_9183d.dir/src.c.o.d -o CMakeFiles/cmTC_9183d.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-DDCqHX/src.c
        Linking C executable cmTC_9183d
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9183d.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_9183d.dir/src.c.o -o cmTC_9183d
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:371 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_GCC_VOLATILE_MEMORY_PROTECTION"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UyEc8j"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UyEc8j"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_GCC_VOLATILE_MEMORY_PROTECTION"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UyEc8j'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_8bafa/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_8bafa.dir/build.make CMakeFiles/cmTC_8bafa.dir/build
        Building C object CMakeFiles/cmTC_8bafa.dir/src.c.o
        /usr/bin/cc -DHAVE_GCC_VOLATILE_MEMORY_PROTECTION  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_8bafa.dir/src.c.o -MF CMakeFiles/cmTC_8bafa.dir/src.c.o.d -o CMakeFiles/cmTC_8bafa.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UyEc8j/src.c
        Linking C executable cmTC_8bafa
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_8bafa.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_8bafa.dir/src.c.o -o cmTC_8bafa
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:383 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_COMPILER__FUNC__"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UHk02T"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UHk02T"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_COMPILER__FUNC__"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UHk02T'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_69d76/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_69d76.dir/build.make CMakeFiles/cmTC_69d76.dir/build
        Building C object CMakeFiles/cmTC_69d76.dir/src.c.o
        /usr/bin/cc -DHAVE_COMPILER__FUNC__  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_69d76.dir/src.c.o -MF CMakeFiles/cmTC_69d76.dir/src.c.o.d -o CMakeFiles/cmTC_69d76.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-UHk02T/src.c
        Linking C executable cmTC_69d76
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_69d76.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_69d76.dir/src.c.o -o cmTC_69d76
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:390 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_COMPILER__FUNCTION__"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5r9KAl"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5r9KAl"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_COMPILER__FUNCTION__"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5r9KAl'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_20ded/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_20ded.dir/build.make CMakeFiles/cmTC_20ded.dir/build
        Building C object CMakeFiles/cmTC_20ded.dir/src.c.o
        /usr/bin/cc -DHAVE_COMPILER__FUNCTION__  -Wattributes -Werror -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_20ded.dir/src.c.o -MF CMakeFiles/cmTC_20ded.dir/src.c.o.d -o CMakeFiles/cmTC_20ded.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-5r9KAl/src.c
        Linking C executable cmTC_20ded
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_20ded.dir/link.txt --verbose=1
        /usr/bin/cc  -Wattributes -Werror -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_20ded.dir/src.c.o -o cmTC_20ded
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "/opt/homebrew/share/cmake/Modules/Internal/CheckSourceCompiles.cmake:104 (try_compile)"
      - "/opt/homebrew/share/cmake/Modules/CheckCSourceCompiles.cmake:58 (cmake_check_source_compiles)"
      - "ConfigureChecks.cmake:422 (check_c_source_compiles)"
      - "CMakeLists.txt:86 (include)"
    checks:
      - "Performing Test HAVE_LD_VERSION_SCRIPT"
    directories:
      source: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zHhoMw"
      binary: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zHhoMw"
    cmakeVariables:
      CMAKE_C_FLAGS: ""
      CMAKE_C_FLAGS_DEBUG: "-g"
      CMAKE_EXE_LINKER_FLAGS: ""
      CMAKE_MODULE_PATH: "/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/cmake/Modules"
      CMAKE_OSX_ARCHITECTURES: ""
      CMAKE_OSX_DEPLOYMENT_TARGET: ""
      CMAKE_OSX_SYSROOT: ""
      CMAKE_POSITION_INDEPENDENT_CODE: "ON"
    buildResult:
      variable: "HAVE_LD_VERSION_SCRIPT"
      cached: true
      stdout: |
        Change Dir: '/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zHhoMw'
        
        Run Build Command(s): /opt/homebrew/bin/cmake -E env VERBOSE=1 /usr/bin/make -f Makefile cmTC_c9de0/fast
        /Applications/Xcode.app/Contents/Developer/usr/bin/make  -f CMakeFiles/cmTC_c9de0.dir/build.make CMakeFiles/cmTC_c9de0.dir/build
        Building C object CMakeFiles/cmTC_c9de0.dir/src.c.o
        /usr/bin/cc -DHAVE_LD_VERSION_SCRIPT  -Wl,--version-script="/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/conftest.map" -arch arm64 -fPIE -MD -MT CMakeFiles/cmTC_c9de0.dir/src.c.o -MF CMakeFiles/cmTC_c9de0.dir/src.c.o.d -o CMakeFiles/cmTC_c9de0.dir/src.c.o -c /Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/CMakeFiles/CMakeScratch/TryCompile-zHhoMw/src.c
        clang: warning: -Wl,--version-script=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/conftest.map: 'linker' input unused [-Wunused-command-line-argument]
        Linking C executable cmTC_c9de0
        /opt/homebrew/bin/cmake -E cmake_link_script CMakeFiles/cmTC_c9de0.dir/link.txt --verbose=1
        ld: unknown options: --version-script=/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/conftest.map 
        clang: error: linker command failed with exit code 1 (use -v to see invocation)
        /usr/bin/cc  -Wl,--version-script="/Users/yukai/Projects/Personal/maigo/deps/libssh-0.11.0/build/conftest.map" -arch arm64 -Wl,-search_paths_first -Wl,-headerpad_max_install_names CMakeFiles/cmTC_c9de0.dir/src.c.o -o cmTC_c9de0
        make[1]: *** [cmTC_c9de0] Error 1
        make: *** [cmTC_c9de0/fast] Error 2
        
      exitCode: 2
...
