name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.23'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
          VERSION=${GITHUB_REF#refs/tags/}
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          GIT_COMMIT=$(git rev-parse --short HEAD)

          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME="maigo-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
          else
            BINARY_NAME="maigo-${VERSION}-${{ matrix.goos }}-${{ matrix.goarch }}"
          fi

          mkdir -p dist
          go build -ldflags="-s -w -X github.com/yukaii/maigo/cmd/maigo.version=${VERSION} -X github.com/yukaii/maigo/cmd/maigo.commit=${GIT_COMMIT} -X github.com/yukaii/maigo/cmd/maigo.date=${BUILD_TIME}" -o dist/${BINARY_NAME} ./cmd/maigo

          # Create tarball for non-windows
          if [ "${{ matrix.goos }}" != "windows" ]; then
            cd dist
            tar -czf ${BINARY_NAME}.tar.gz ${BINARY_NAME}
            rm ${BINARY_NAME}
            cd ..
          fi

    - name: Upload release assets
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Docker
    runs-on: ubuntu-latest
    needs: release

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${GITHUB_REF#refs/tags/}
          BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          GIT_COMMIT=${{ github.sha }}
